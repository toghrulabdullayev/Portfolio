/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, Float } from "@react-three/drei";
import { FloatProps } from "@react-three/drei";
import { Mesh } from "three";

export function TypeScript3D(props: FloatProps) {
  const { nodes, materials } = useGLTF("/models/typescript.glb");

  return (
    <Float {...props} speed={2} floatIntensity={2}>
      <group
        {...props}
        dispose={null}
        position={[0, -2, 0]}
        rotation={[1.577, 0, 0.4]}
        scale={0.5}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Curve_1 as Mesh).geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={(nodes.Curve_2 as Mesh).geometry}
          material={materials["Material.004"]}
        />
      </group>
    </Float>
  );
}

useGLTF.preload("/models/typescript.glb");

export default TypeScript3D;
